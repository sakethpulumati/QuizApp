{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","style","textAlign","document","getElementById"],"mappings":"2KAKe,SAASA,IACvB,IAAMC,EAAY,CACf,CACDC,aAAc,4BACdC,cAAe,CACd,CAAEC,WAAY,sCAAuCC,WAAW,GAChE,CAAED,WAAY,6BAA8BC,WAAW,GACvD,CAAED,WAAY,4BAA6BC,WAAW,GACtD,CAAED,WAAY,gBAAiBC,WAAW,KAG1C,CACDH,aAAc,+DACdC,cAAe,CACd,CAAEC,WAAY,0BAA2BC,WAAW,GACpD,CAAED,WAAY,0BAA2BC,WAAW,GACpD,CAAED,WAAY,0BAA2BC,WAAW,GACpD,CAAED,WAAY,0BAA2BC,WAAW,KAGpD,CACDH,aAAc,oCACdC,cAAe,CACd,CAAEC,WAAY,4BAA6BC,WAAW,GACtD,CAAED,WAAY,0BAA2BC,WAAW,GACpD,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,yBAA0BC,WAAW,KAGnD,CACDH,aAAc,6BACdC,cAAe,CACd,CAAEC,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,UAAWC,WAAW,KAGpC,CACDH,aAAc,mFACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,oBAAqBC,WAAW,KAG9C,CACDH,aAAc,kEACdC,cAAe,CACd,CAAEC,WAAY,4BAA6BC,WAAW,GACtD,CAAED,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,oBAAqBC,WAAW,KAG9C,CACDH,aAAc,yEACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,oBAAqBC,WAAW,KAG9C,CACDH,aAAc,yBACdC,cAAe,CACd,CAAEC,WAAY,iBAAkBC,WAAW,GAC3C,CAAED,WAAY,gBAAiBC,WAAW,GAC1C,CAAED,WAAY,qBAAsBC,WAAW,GAC/C,CAAED,WAAY,eAAgBC,WAAW,KAGzC,CACDH,aAAc,+DACdC,cAAe,CACd,CAAEC,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,SAAUC,WAAW,KAGnC,CACDH,aAAc,iFACdC,cAAe,CACd,CAAEC,WAAY,iBAAkBC,WAAW,GAC3C,CAAED,WAAY,iBAAmBC,WAAW,GAC5C,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,kBAAmBC,WAAW,MAK/C,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAcA,OACC,qBAAKC,UAAU,MAAf,SACEJ,EACA,qBAAKI,UAAU,gBAAf,SACE,+BAAKF,GAAS,EAAI,eAAM,eAAxB,eAA2CA,EAA3C,WAA0DV,EAAUa,OAApE,IAA6EH,GAAS,EAAI,eAAM,oBAGlG,qCACC,sBAAKE,UAAU,mBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,8CAAiBN,EAAkB,KADpC,IAC+CN,EAAUa,OADzD,KAEC,0BAED,qBAAKD,UAAU,gBAAf,SAA+B,4BAAIZ,EAAUM,GAAiBL,oBAE/D,qBAAKW,UAAU,iBAAf,SACEZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACC,GAAD,OAC7C,wBAAQC,QAAS,kBA7BS,SAACZ,GAC5BA,GACHO,EAASD,EAAQ,GAGlB,IAAMO,EAAeX,EAAkB,EACnCW,EAAejB,EAAUa,OAC5BN,EAAmBU,GAEnBR,GAAa,GAoBcS,CAAwBH,EAAaX,YAA5D,SAAyEW,EAAaZ,uBCpI7F,IAYegB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,oBAAIC,MAAO,CAACC,UAAU,UAAtB,mCACA,cAACjC,EAAD,OAEFkC,SAASC,eAAe,SAM1Bf,K","file":"static/js/main.234d7d25.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\n//https://www.youtube.com/watch?v=Lya-qYiDqIA\n//sourceytlink\n\nexport default function App() {\n\tconst questions = [\n    {\n\t\t\tquestionText: 'What does HTML stand for?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Hyperlinks and Text Markup Language', isCorrect: false },\n\t\t\t\t{ answerText: 'Hyper Text Markup Language', isCorrect: true },\n\t\t\t\t{ answerText: 'Home Tool Markup Language', isCorrect: false },\n\t\t\t\t{ answerText: 'None of these', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'The correct sequence of HTML tags for starting a webpage is ',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Head, Title, HTML, body', isCorrect: false },\n\t\t\t\t{ answerText: 'HTML, Body, Title, Head', isCorrect: false },\n\t\t\t\t{ answerText: 'HTML, Head, Title, Body', isCorrect: false },\n\t\t\t\t{ answerText: 'HTML, Head, Title, Body', isCorrect: true },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'How to create a checkbox in HTML?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '<input type = \"checkbox\">', isCorrect: true },\n\t\t\t\t{ answerText: '<input type = \"button\">', isCorrect: false },\n\t\t\t\t{ answerText: '<checkbox>', isCorrect: false },\n\t\t\t\t{ answerText: '<input type = \"check\">', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'HTML tags are enclosed in-',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '# and #', isCorrect: false },\n\t\t\t\t{ answerText: '{ and }', isCorrect: false },\n\t\t\t\t{ answerText: '{ and }', isCorrect: false },\n\t\t\t\t{ answerText: '< and >', isCorrect: true },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'Which of the following attribute is used to provide a unique name to an element?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'class', isCorrect: false },\n\t\t\t\t{ answerText: 'id', isCorrect: true },\n\t\t\t\t{ answerText: 'type', isCorrect: false },\n\t\t\t\t{ answerText: 'None of the above', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'Which of the following is the correct way to send mail in HTML?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '<a href = \"mailto: xy@y\">', isCorrect: true },\n\t\t\t\t{ answerText: '<a href = \"xy@y\">', isCorrect: false },\n\t\t\t\t{ answerText: '<mail xy@y</mail>', isCorrect: false },\n\t\t\t\t{ answerText: 'None of the above', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'Which of the following HTML attribute is used to define inline styles?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'style', isCorrect: true },\n\t\t\t\t{ answerText: 'type', isCorrect: false },\n\t\t\t\t{ answerText: 'class', isCorrect: false },\n\t\t\t\t{ answerText: 'None of the above', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'The tags in HTML are -',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'case-sensitive', isCorrect: false },\n\t\t\t\t{ answerText: 'in upper case', isCorrect: false },\n\t\t\t\t{ answerText: 'not case sensitive', isCorrect: true },\n\t\t\t\t{ answerText: 'in lowercase', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: 'Which of the following is the root tag of the HTML document?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '<body>', isCorrect: false },\n\t\t\t\t{ answerText: '<head>', isCorrect: false },\n\t\t\t\t{ answerText: '<title>', isCorrect: false },\n\t\t\t\t{ answerText: '<html>', isCorrect: true },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: ' In HTML5, which of the following tag is used to initialize the document type?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '<Doctype HTML>', isCorrect: false },\n\t\t\t\t{ answerText: '<\\Doctype html>', isCorrect: false },\n\t\t\t\t{ answerText: '<Doctype>', isCorrect: false },\n\t\t\t\t{ answerText: '<!DOCTYPE html>', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t  <h2>{score >= 5 ? \"ðŸ˜Ž\": \"ðŸ˜¢\" }\tYou scored {score} out of {questions.length} {score >= 5 ? \"ðŸ˜Ž\": \"ðŸ˜¢\" }</h2>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span> Question {currentQuestion + 1}</span>/{questions.length} :\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'><b>{questions[currentQuestion].questionText}</b></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1 style={{textAlign:\"center\"}}>Quiz AppðŸ’­ </h1>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}